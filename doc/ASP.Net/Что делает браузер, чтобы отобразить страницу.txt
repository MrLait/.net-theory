##Что происходит в браузере в момент когда пользователь набрал адресс сайта, нажал enter
и до момента отображения страницы на экране.
    
        Браузер получает адресс, который состоит из:
    Протокола http/https;
    Хост, по которому нужно сделать обращение. Он представленн доменным именем.
    Адрес ресурса, который нужно получить на веб сервере. Он можеть быть как реальным находиться на физичиской файловой системе. Так и 
виртуальным на одном физическом веб сервере может находиться несолько хостов.
    После того как браузер сделал разбор адреса он на основе хоста получает Ip-адрес сервера, где расположен веб сервер. 
Для этого нужно сделать resolve доменного имени в Ip-адрес и для этого используется DNS. Если ранее этот адрес использовался, 
то запроса к DNS-у не делается т.к он берется из локального кэша, если нет, то кэшируется.
    По IP-адресу устанавливается TCP-соединение Transmission Control Protocol. TCP-соединение отличается от UDP-соединения, 
тем что соединение осуществвляется с подтверждением получения информации. Если в TCP подтверждения не получено, то информация 
отправляется заного. 
    Порт по которому должно быть установлено соединение для HTTP - 80-ый, а для https - 443-ий.
    После того как установлено TCP-соединение происходит обмен пакетами с флагами:
AСK - Acknowledgement number номер подтверждения.
SYN - Sequence number порядковый номер. Позволяет контролировать порядок сообщений.
FIN - Finish для прекращения соединения.
    A так же если соединене просиходит по HTTPS, то идет TLS HANDSHAKE так называемое рукопожатие т.е. обмен сертификатами, 
проверка подлинности сертификатов, обмен публичными ключами - устанавливается доверенное соединение на основе сертификатов.
        Далее формируем HTTP-заголовок
    Первая строчка содержит название метода, расположение ресурса и версия протокола клиента:
    GET - извлекать ресурс(содержимое файлов) целиком;
    HEAD - запрашивает ресурс, но без тела ответа, а только его описание, что бы не загружать данные целиком;
    POST - отправляет новых данных к определённому ресурсу;
    PUT - используется для замены данных ресурса целиком; Если целевой ресурс не имеет текущего представления и PUT успешно его создает, то
        сервер происхождения ДОЛЖЕН проинформировать агента пользователя, отправив ответ 201 (Создано). Если целевой ресурс действительно 
        имеет текущее представление, и это представление успешно изменено в соответствии с состоянием вложенного представления, то 
        сервер происхождения ДОЛЖЕН отправить либо 200 (OK), либо 204
    PATCH - используется для частичного изменения ресурса;
    DELETE - удаляет указанный ресурс;
    CONNECT - запускает двустороннюю связь с запрошенным ресурсом 
    OPTIONS - используется для запроса параметров соединения с ресурсом;
    TRACE - используется для запроса тестового сообщения с ресурса; 
До версии 1.0 не было поддержки виртуальных хостов веб серверов поэтому нельзя было 
указать такой заголовок:
    Host : (имя сервера, который как правило совпадает с доменным именем)
Так же есть протокол версии 2.0, 
а google разрабатывал SPDY(speedy).
    Connection: close - некоторые браузеры умеют делать percictance соеденение
    
    После того как мы сформирвали и получили ответ:
Ответом является информация о том что произошла ошибка, различые статус коды:
    2XX - success; 200 - Ok
    3XX - Redirection; 301 - Moved Permanently; 302 - Moved Temporarily
    4XX - Client Error; 400 - bad request; 404 - Not found; 408 - Request timeout;
    5XX - Server Error; 500 - interner server error; 503 Service Unavailable; 504 - Gateway timeout.
В случае успеха приходит заголовок со статус кодом 200 и html страница.
    Далее браузер берет html страницу и делает парсинг:
Html достаточно сложный язык и страница как правило не парсится в один проход...
Лексический анализ - когда ввыделяются ликсемы и токены;
Синтаксический анализ - проверяется правильность верстки(правильность самого языка);
Формирование дерева распарсенных элементов:
При парсинге html-я создается DOM и CSS-COM, а так же rendering-tree с набором элементов благодаря которому делается отображение 
Все это делается в внесколько проходов и если на веб странцице есть скрипты, то они могут изменять:
    Положение элементов;
    Их размер.
Для этого дополнитльно запускаются процессы reflow и read row.

    Далее на основе парсинга отображается страница пользователю.
    
# Браузер — это движок рендеринга. Его работа заключается в том, 
чтобы загрузить веб-страницу и +представить её в понятном для человека виде.    